syntax = "proto3";

package protocol;

import "message.proto";

service ImApiService {
    rpc GetConnections(Empty) returns (Users) {}
    rpc Send(stream protocol.Message) returns (Result) {}
    rpc Broadcast(stream protocol.Message) returns (Result) {}
    rpc Online(User) returns (Result) {}
    rpc Kick(User) returns (Result) {}
}

service ImDispatchService {
    // push messages that from front server to backend services
    rpc Dispatch(Empty) returns (stream protocol.Message) {}
    // only for the cluster,
    // single node doesn't need to sync session
    rpc SessionIn(Empty) returns (stream Session) {}
    rpc SessionOut(Empty) returns (stream Session) {}
}

message Empty {

}

message User {
    string userId  = 1;
}

message Users {
    repeated string userIds = 1;
}

message Session {
    string token    = 1;
    string userId   = 2;
    string userName = 3;
    string clientId = 4;
    string nodeName = 5;
}

message Result {
    bool success   = 1;
}
